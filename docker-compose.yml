version: '3.7'
volumes:
  pg_data:

services:

  nginx-proxy:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - pg-tileserv
    restart: unless-stopped
    networks:
      - web

  frontend:
    image: pigeosolutions/hyfaa-frontend:latest
    restart: unless-stopped
    networks:
      - web

  db:
    image: pigeosolutions/hyfaa-postgis:10-3.1
    build: ./hyfaa-database
    env_file:
      - pg.env
    volumes:
      - pg_data:/var/lib/postgresql/data
#    ports:
#      - 5432:5432
    networks:
      - internal

  backend:
    image: pigeosolutions/hyfaa-backend:1.0
    build:
      context: ./hyfaa-backend
      dockerfile: docker/Dockerfile
    environment:
      - DATABASE_URI_RW=postgresql://hyfaa_publisher:hyfaa_publisher@db:5432/mgb_hyfaa
      - DATABASE_URI=postgresql://hyfaa_backend:hyfaa_backend@db:5432/mgb_hyfaa
    volumes:
      - ./hyfaa-scheduler/work_configurations/operational_niger_gsmap:/hyfaa-scheduler/data
    networks:
      - internal
      - web

#
#  scheduler:
#    restart: "no"
#    image: pigeosolutions/hyfaa-scheduler:4.0
#    build: ./hyfaa-scheduler
#    volumes:
#      - ./hyfaa-scheduler/work_configurations/operational_niger_gsmap:/work
#    networks:
#      - net

  pg-tileserv:
    image: pigeosolutions/pg_tileserv:latest-alpine-3.12
    entrypoint: ["/wait-for-db.sh"]
    depends_on:
      - db
    build:
      context: ./pg_tileserv
      dockerfile: Dockerfile.alpine
      args:
        VERSION: latest-alpine-3.12
    env_file:
      - pg_tileserv.env
#    ports:
#      - 7800:7800
    volumes:
      - ./config/:/config/
    networks:
      - internal
      - web

networks:
  web:
  internal:
