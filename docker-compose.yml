version: '3.7'
volumes:
  pg_data:

services:
  traefik:
    image: traefik:v2.4
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/traefik.yml:/traefik.yml:ro
      - ./acme:/etc/traefik/acme
    networks:
      - web

#  nginx-proxy:
#    image: nginx:alpine
#    ports:
#      - "80:80"
#    volumes:
#      - ./config/nginx/templates:/etc/nginx/templates
#    environment:
#      - NGINX_PUBLIC_HOST=mgb-hyfaa.pigeo.fr
#      - NGINX_HYFAA_ASSIM_HOST=hyfaa.pigeo.fr
#    depends_on:
#      - pg-tileserv
#      - backend
#      - frontend
#    restart: unless-stopped
#    networks:
#      - web

  site:
    image: pigeosolutions/hyfaa-site:latest
    restart: unless-stopped
    networks:
      - web
    labels:
      - "traefik.enable=true"
      # http router
      - "traefik.http.routers.site.entrypoints=http"
      - "traefik.http.routers.site.rule=PathPrefix(`/site`)"
      # HTTP -> HTTPS redirect
      - "traefik.http.middlewares.site.redirectscheme.scheme=https"
      - "traefik.http.middlewares.site.redirectscheme.permanent=false"
      - "traefik.http.routers.site.middlewares=site@docker"
      # HTTPS router
      - "traefik.http.routers.site-secure.entrypoints=https"
      - "traefik.http.routers.site-secure.rule=PathPrefix(`/site`)"
      - "traefik.http.routers.site-secure.tls=true"
      - "traefik.http.routers.site-secure.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.site-secure.tls.domains[0].main=mgb-hyfaa.pigeo.fr"

  frontend:
    image: pigeosolutions/hyfaa-frontend:latest
    restart: unless-stopped
    networks:
      - web
    labels:
      - "traefik.enable=true"
      # HTTP router
      - "traefik.http.routers.frontend.entrypoints=http"
      - "traefik.http.routers.frontend.rule=( Host(`localhost`) || Host(`mgb-hyfaa.pigeo.fr`)) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend.priority=2"
#      - "traefik.http.middlewares.frontend.stripprefix.prefixes=/map"
#      - "traefik.http.routers.frontend.middlewares=frontend@docker"
      # HTTP -> HTTPS redirect
      - "traefik.http.middlewares.frontend.redirectscheme.scheme=https"
      - "traefik.http.middlewares.frontend.redirectscheme.permanent=false"
      - "traefik.http.routers.frontend.middlewares=frontend@docker"
      # HTTPS router
      - "traefik.http.routers.frontend-secure.entrypoints=https"
      - "traefik.http.routers.frontend-secure.rule=( Host(`localhost`) || Host(`mgb-hyfaa.pigeo.fr`)) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend-secure.priority=2"
      - "traefik.http.routers.frontend-secure.tls=true"
      - "traefik.http.routers.frontend-secure.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.frontend-secure.tls.domains[0].main=mgb-hyfaa.pigeo.fr"

  frontend-assim:
    image: pigeosolutions/hyfaa-frontend:latest
    restart: unless-stopped
    volumes:
      - ./config/frontend/assets/settings.json:/usr/share/nginx/html/assets/settings.json
    networks:
      - web
    labels:
      - "traefik.enable=true"
      # HTTP router
      - "traefik.http.routers.frontend-assim.entrypoints=http"
      - "traefik.http.routers.frontend-assim.rule=Host(`hyfaa.pigeo.fr`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend-assim.priority=1"
      # HTTP -> HTTPS redirect
      - "traefik.http.middlewares.frontend-assim.redirectscheme.scheme=https"
      - "traefik.http.middlewares.frontend-assim.redirectscheme.permanent=false"
      - "traefik.http.routers.frontend-assim.middlewares=frontend-assim@docker"
      # HTTPS router
      - "traefik.http.routers.frontend-assim-secure.entrypoints=https"
      - "traefik.http.routers.frontend-assim-secure.rule=Host(`hyfaa.pigeo.fr`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend-assim-secure.priority=1"
      - "traefik.http.routers.frontend-assim-secure.tls=true"
      - "traefik.http.routers.frontend-assim-secure.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.frontend-assim-secure.tls.domains[0].main=hyfaa.pigeo.fr"

  db:
    image: pigeosolutions/hyfaa-postgis:10-3.1
    build: ./hyfaa-database
    env_file:
      - pg.env
    volumes:
      - pg_data:/var/lib/postgresql/data
#    ports:
#      - 5432:5432
    networks:
      - internal

  backend:
    image: pigeosolutions/hyfaa-backend:1.0
    build:
      context: ./hyfaa-backend
      dockerfile: docker/Dockerfile
    ports:
      - 5000:5000
    environment:
      - DATABASE_URI_RW=postgresql://hyfaa_publisher:hyfaa_publisher@db:5432/mgb_hyfaa
      - DATABASE_URI=postgresql://hyfaa_backend:hyfaa_backend@db:5432/mgb_hyfaa
      - FLASK_CONFIGURATION=production
      - SCRIPT_CONFIG_PATH=conf/script_config.hjson
    volumes:
      - ./hyfaa-scheduler/work_configurations/operational_niger_gsmap:/hyfaa-scheduler/data
    networks:
      - internal
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=hyfaa-mgb-platform_web"
      # HTTP router
      - "traefik.http.routers.backend.entrypoints=http"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`, `/swaggerui`)"
      - "traefik.http.routers.backend.priority=11"
      #  HTTP -> HTTPS redirect
      - "traefik.http.middlewares.backend.redirectscheme.scheme=https"
      - "traefik.http.middlewares.backend.redirectscheme.permanent=false"
      - "traefik.http.routers.backend.middlewares=backend@docker"
      # HTTPS router
      - "traefik.http.routers.backend-secure.entrypoints=https"
      - "traefik.http.routers.backend-secure.rule=PathPrefix(`/api`, `/swaggerui`)"
      - "traefik.http.routers.backend-secure.priority=11"
      - "traefik.http.routers.backend-secure.tls=true"
      - "traefik.http.routers.backend-secure.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.backend-secure.tls.domains[0].main=mgb-hyfaa.pigeo.fr"

#  scheduler:
#    restart: "no"
#    image: pigeosolutions/hyfaa-scheduler:4.0
#    build: ./hyfaa-scheduler
#    volumes:
#      - ./hyfaa-scheduler/work_configurations/operational_niger_gsmap:/work
#    networks:
#      - net

  pg-tileserv:
    image: pigeosolutions/pg_tileserv:latest-alpine-3.12
    entrypoint: ["/wait-for-db.sh"]
    depends_on:
      - db
    build:
      context: ./pg_tileserv
      dockerfile: Dockerfile.alpine
      args:
        VERSION: latest-alpine-3.12
    env_file:
      - pg_tileserv.env
#    ports:
#      - 7800:7800
    volumes:
      - ./config/:/config/
    networks:
      - internal
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=hyfaa-mgb-platform_web"
      # HTTP router
      - "traefik.http.routers.pg-tileserv.entrypoints=http"
      - "traefik.http.routers.pg-tileserv.rule=PathPrefix(`/tiles`)"
      - "traefik.http.routers.pg-tileserv.priority=10"
      # HTTP -> HTTPS redirect
      - "traefik.http.middlewares.pg-tileserv.redirectscheme.scheme=https"
      - "traefik.http.middlewares.pg-tileserv.redirectscheme.permanent=false"
      - "traefik.http.routers.pg-tileserv.middlewares=pg-tileserv@docker"
      # HTTPS router
      - "traefik.http.routers.pg-tileserv-secure.entrypoints=https"
      - "traefik.http.routers.pg-tileserv-secure.rule=PathPrefix(`/tiles`)"
      - "traefik.http.routers.pg-tileserv-secure.priority=10"
      - "traefik.http.routers.pg-tileserv-secure.tls=true"
      - "traefik.http.routers.pg-tileserv-secure.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.pg-tileserv-secure.tls.domains[0].main=mgb-hyfaa.pigeo.fr"

networks:
  web:
  internal:
