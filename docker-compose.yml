version: '3.7'
volumes:
  pg_data:
  acme:

#secrets:
#  auth_users:
#    file: ./secrets/auth_users.txt

services:
# We're not using this one anymore. We're using an externally configured traefik, see https://github.com/OMP-IRD/traefik-proxy
#   traefik:
#     image: traefik:v2.4
#     ports:
#       - "80:80"
#       - "443:443"
#       - "8000:8000"
#     expose:
#       # traefik dashboard port
#       - 8080
#     volumes:
#       - /etc/localtime:/etc/localtime:ro
#       - /var/run/docker.sock:/var/run/docker.sock
#       - ./config/traefik.yml:/traefik.yml:ro
#       - acme:/etc/traefik/acme
# #    secrets:
# #      - auth_users
#     networks:
#       - traefik-proxy_proxy_network
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.dashboard.rule=(Host(`admin.localhost`) ||Host(`ird1.pigeo.fr`) ) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
#       - "traefik.http.routers.dashboard.service=api@internal"
#       - "traefik.http.routers.dashboard.entrypoints=websecure"
#       - "traefik.http.routers.dashboard.tls=true"
#       - "traefik.http.routers.dashboard.tls.certresolver=letsEncrypt"
#       - "traefik.http.routers.dashboard.tls.domains[0].main=mgb-hyfaa.pigeo.fr"
# #      - "traefik.http.routers.dashboard.middlewares=auth"
# #      - "traefik.http.middlewares.auth.basicauth.usersFile=/run/secrets/auth_users"

  site:
    image: pigeosolutions/hyfaa-site:latest
    restart: unless-stopped
    networks:
      - traefik-proxy_proxy_network
    labels:
      - "traefik.enable=true"
      # HTTPS router
      - "traefik.http.routers.site-secure.entrypoints=websecure"
      - "traefik.http.routers.site-secure.rule=( Host(`localhost`) || Host(`mgb-hyfaa.pigeo.fr`) || Host(`hyfaa.pigeo.fr`)) && PathPrefix(`/site`)"
      - "traefik.http.routers.site-secure.priority=3"
      - "traefik.http.routers.site-secure.tls=true"
      - "traefik.http.routers.site-secure.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.site-secure.tls.domains[0].main=mgb-hyfaa.pigeo.fr"
      - "traefik.http.routers.site-secure.tls.domains[0].sans=hyfaa.pigeo.fr"

  frontend:
    image: pigeosolutions/hyfaa-frontend:latest
    restart: unless-stopped
    networks:
      - traefik-proxy_proxy_network
    labels:
      - "traefik.enable=true"
      # HTTPS router
      - "traefik.http.routers.frontend-secure.entrypoints=websecure"
      - "traefik.http.routers.frontend-secure.rule=( Host(`localhost`) || Host(`mgb-hyfaa.pigeo.fr`)) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend-secure.priority=2"
      - "traefik.http.routers.frontend-secure.tls=true"
      - "traefik.http.routers.frontend-secure.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.frontend-secure.tls.domains[0].main=mgb-hyfaa.pigeo.fr"

  frontend-assim:
    image: pigeosolutions/hyfaa-frontend:latest
    restart: unless-stopped
    volumes:
      - ./config/frontend/assets/settings.json:/usr/share/nginx/html/assets/settings.json
    networks:
      - traefik-proxy_proxy_network
    labels:
      - "traefik.enable=true"
      # HTTPS router
      - "traefik.http.routers.frontend-assim-secure.entrypoints=websecure"
      - "traefik.http.routers.frontend-assim-secure.rule=Host(`hyfaa.pigeo.fr`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend-assim-secure.priority=1"
      - "traefik.http.routers.frontend-assim-secure.tls=true"
      - "traefik.http.routers.frontend-assim-secure.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.frontend-assim-secure.tls.domains[0].main=hyfaa.pigeo.fr"

  db:
    image: pigeosolutions/hyfaa-postgis:10-3.1
    build: ./hyfaa-database
    env_file:
      - pg.env
    volumes:
      - pg_data:/var/lib/postgresql/data
#    ports:
#      - 5432:5432
    networks:
      - internal

  backend:
    image: pigeosolutions/hyfaa-backend:1.1
    build:
      context: ./hyfaa-backend
      dockerfile: docker/Dockerfile
    expose:
      - 5000
    # ports:
    #   - 5000:5000
    environment:
      - DATABASE_URI_RW=postgresql://hyfaa_publisher:hyfaa_publisher@db:5432/mgb_hyfaa
      - DATABASE_URI=postgresql://hyfaa_backend:hyfaa_backend@db:5432/mgb_hyfaa
      - FLASK_CONFIGURATION=production
      - SCRIPT_CONFIG_PATH=conf/script_config.hjson
    volumes:
      - ./hyfaa-scheduler/work_configurations/operational_niger_gsmap:/hyfaa-scheduler/data
    networks:
      - internal
      - traefik-proxy_proxy_network
    labels:
      - "traefik.enable=true"
      # Tell traefik which network to look on, since this container is connected to 2 different nets
      - "traefik.docker.network=traefik-proxy_proxy_network"
      # HTTPS router
      - "traefik.http.routers.backend-secure.entrypoints=websecure"
      - "traefik.http.routers.backend-secure.rule=( Host(`localhost`) || Host(`mgb-hyfaa.pigeo.fr`) || Host(`hyfaa.pigeo.fr`)) && PathPrefix(`/api/v1`) || PathPrefix(`/swaggerui`)"
      - "traefik.http.routers.backend-secure.priority=4"
      - "traefik.http.routers.backend-secure.tls=true"
      - "traefik.http.routers.backend-secure.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.backend-secure.tls.domains[0].main=mgb-hyfaa.pigeo.fr"
      - "traefik.http.routers.backend-secure.tls.domains[0].sans=hyfaa.pigeo.fr"


  pg-tileserv:
    image: pigeosolutions/pg_tileserv:latest-alpine-3.12
    entrypoint: ["/wait-for-db.sh"]
    depends_on:
      - db
    build:
      context: ./pg_tileserv
      dockerfile: Dockerfile.alpine
      args:
        VERSION: latest-alpine-3.12
    env_file:
      - pg_tileserv.env
    expose:
      - 7800
#    ports:
#      - 7800:7800
    volumes:
      - ./config/:/config/
    networks:
      - internal
      - traefik-proxy_proxy_network
    labels:
      - "traefik.enable=true"
      # Tell traefik which network to look on, since this container is connected to 2 different nets
      - "traefik.docker.network=traefik-proxy_proxy_network"
      # HTTPS router
      - "traefik.http.routers.pg-tileserv-secure.entrypoints=websecure"
      - "traefik.http.routers.pg-tileserv-secure.rule=( Host(`localhost`) || Host(`mgb-hyfaa.pigeo.fr`) || Host(`hyfaa.pigeo.fr`)) && PathPrefix(`/tiles`)"
      - "traefik.http.routers.pg-tileserv-secure.priority=5"
      - "traefik.http.routers.pg-tileserv-secure.tls=true"
      - "traefik.http.routers.pg-tileserv-secure.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.pg-tileserv-secure.tls.domains[0].main=mgb-hyfaa.pigeo.fr"
      - "traefik.http.routers.pg-tileserv-secure.tls.domains[0].sans=hyfaa.pigeo.fr"

networks:
  traefik-proxy_proxy_network:
    external: true
  internal:
